@inproceedings{gamemas-woa2016,
   Author = {Mariani, Stefano and Omicini, Andrea},
   Booktitle = {WOA 2016 -- 17th Workshop ``From Objects to Agents''},
   Editor = {Santoro, Corrado and Messina, Fabrizio and De Benedetti, Massimiliano},
   Keywords = {game engines; MAS; agent societies; environment; Unity3D; Unreal Engine},
   Issn = {1613-0073},
   Location = {Catania, Italy},
   Month = {29--30~} # jul,
   Note = {Proceedings of the 17th Workshop ``From Objects to Agents'' co-located with 18th European Agent Systems Summer School (EASSS 2016)},
   Pages = {106--111},
   Publisher = {Sun SITE Central Europe, RWTH Aachen University},
   ScopusId = {2-s2.0-84985994367},
   Series = {CEUR Workshop Proceedings},
   Subseries = {AI*IA Series},
   Title = {Game Engines to Model {MAS}: A Research Roadmap},
   Url = {http://ceur-ws.org/Vol-1664/w18.pdf},
   Volume = 1664,
   Year = 2016
}

@phdthesis{amslaurea8424,
   title = {Stato dell'arte della progettazione automatica di programmi per robot},
   author = {Mattia Cerbara},
   abstract = {La comprensione delle propriet{\`a} e delle meccaniche di funzionamento dei sistemi complessi e dinamici che ci circondano {\`e} uno degli obiettivi principali delle discipline ingegneristiche e scientifiche.
   Lo sviluppo nel campo dell'Intelligenza Artificiale ha permesso la creazione di entit{\`a} robotiche sempre pi{\`u} intelligenti, in grado di manifestare comportamenti notevoli e di raggiungere gli obiettivi prefissati: la progettazione di software di controllo ha velocemente ricevuto una crescente responsabilit{\`a}.
   Questo elaborato si propone di inquadrare in generale la situazione della progettazione di software di controllo robotici, focalizzandosi in particolare sulle tecniche di progettazione automatica di programmi per robot: dopo aver inquadrato il background su cui si basa la progettazione automatica ed aver mostrato una panoramica dei principali metodi di progettazione diretta, vengono elencate e spiegate le tecniche pi{\`u} utilizzate ed interessanti della progettazione automatica di programmi per robot.},
   keywords = {progettazione, automatica, software, controllo, robot, programmi},
   url = {http://amslaurea.unibo.it/8424/},
   year = "2017",
   school = "Alma Mater Studiorum - Università di Bologna"
}

@phdthesis{amslaurea15657,
   title = {Game Engines and MAS: BDI \& Artifacts in Unity},
   author = {Nicola Poli},
   keywords = {BDI,Unity,Game Engine,Unity3D,Practical Reasoning,MAS,BDI Agent,Multiagent System,Prolog,Jason,Autonomous Agent},
   abstract = {In questa tesi vedremo un breve sunto riguardo lo stato dei Sistemi Multi-Agente e andremo ad analizzare le limitazioni che attualmente ne impediscono l'utilizzo ai programmatori di videogiochi. Dopodich{\'e}, andremo a proporre un nuovo linguaggio BDI, basato su Prolog e inspirato a Jason, che, grazie all'interprete Prolog sviluppato da I. Horswill, dar{\`a} la possibilit{\`a} al programmatore di videogiochi di esprimere comportamenti dichiarativi di alto livello per agenti autonomi all'interno del game engine Unity. Andremo anche a proporre una versione di Artefatto per la modellazione dell'ambiente in una scena Unity e un layer di comunicazione che agenti e artefatti possano utilizzare per interagire tra loro. Infine presenteremo un caso di studio per sottolineare i benefici che questo sistema fornisce.},
   url = {http://amslaurea.unibo.it/15657/},
   year = "2017",
   school = "Alma Mater Studiorum - Università di Bologna"
}

@phdthesis{amslaurea16100,
   title = {Game Engines e MAS: Spatial Tuples in Unity3D},
   author = {Alessandro Bagnoli},
   keywords = {Unity3D,Spatial,Tuples,BDI,Linda,MAS},
   abstract = {Questa tesi ambisce ad integrare due diversi modelli computazionali: quello proprio del game engine Unity3D  che, come sar{\`a} illustrato nel corso della digressione, si basa su esecuzione sequenziale e coroutine con quello proprio degli agenti BDI. Il motivo che spinge a fare ci{\`o} {\`e} poter sfruttare le potenzialit{\`a} dei game engine per ingegnerizzare l'astrazione di ambiente nei MAS. Dunque, considerando che spesso l'ambiente rappresenta un mezzo di coordinazione, nel lavoro di integrazione vengono considerati anche i modelli di coordinazione tuple-based. Come riferimento per concretizzare il tutto viene usato il modello Spatial Tuples.
   I game engine si sono gi{\`a} dimostrati adatti a supportare molti dei requisiti richiesti dalla coordinazione di agenti situati, ossia supportano in maniera soddisfacente la coordinazione mediata dall'ambiente e collocata nello spazio. L'obiettivo finale {\`e} quindi quello di migliorare lo stato dell'arte rappresentato da due librerie rese disponibili ai programmatori Unity3D, frutto del lavoro di due tesi di laurea magistrale nello specifico un motore BDI-like e un servizio Linda-like di coordinazione e comunicazione. Il miglioramento {\`e} mirato a fornire il miglior supporto possibile al modello di coordinazione Spatial Tuples recentemente proposto in letteratura, fornendo al programmatore finale delle API che permettano di utilizzare il suddetto modello all'interno di Unity3D con il minimo sforzo.},
   url = {http://amslaurea.unibo.it/16100/},
   year = "2018",
   school = "Alma Mater Studiorum - Università di Bologna"
}

@phdthesis{amslaurea12270,
   title = {Tecnologie ad Agenti per Piattaforme di Gaming: un caso di studio basato su JaCaMo e Unity},
   author = {Marco Fuschini},
   abstract = {Progettazione di un middleware che permetta la comunicazione tra piattaforme ad agenti e piattaforme di gaming. Unity3D e JaCaMo sono stati utilizzati come caso di studio.},
   url = {http://amslaurea.unibo.it/12270/},
   keywords = {Agenti, Unity3D, Middleware, A.I., JaCaMo, Videogiochi},
   year = "2017",
   school = "Alma Mater Studiorum - Università di Bologna"
}

@InProceedings{ciga,
   author="van Oijen, Joost and Vanh{\'e}e, Lo{\"i}s and Dignum, Frank",
   editor="Beer, Martin and Brom, Cyril and Dignum, Frank and Soo, Von-Wun",
   title="CIGA: A Middleware for Intelligent Agents in Virtual Environments",
   booktitle="Agents for Educational Games and Simulations",
   year="2012",
   publisher="Springer Berlin Heidelberg",
   address="Berlin, Heidelberg",
   abstract="Building intelligent behavior in (educational) games and simulations can greatly benefit from the use of agent technology. Intelligent agents within a multi-agent system can be developed for controlling virtual characters in a simulation environment within a game engine. Coupling a multi-agent system to a game engine is not a trivial task and introduces several conceptual design issues concerning embodied agent design. In this paper we present CIGA, a middleware to facilitate this coupling tackling the design issues in a structured approach, not only for embodied agent design but also for the system as a whole.",
   isbn="978-3-642-32326-3"
}

@incollection{mas-as-complex-systems,
   Author = {Omicini, Andrea and Zambonelli, Franco},
   Booktitle = {Declarative Agent Languages and Technologies},
   Doi = {10.1007/978-3-540-25932-9_1},
   Editor = {Leite, Jo{\~a}o Alexandre and Omicini, Andrea and Sterling, Leon and Torroni, Paolo},
   Isbn = {978-3-540-22124-1},
   Isbn-Online = {978-3-540-25932-9},
   Isbn-10 = {3-540-22124-7},
   Issn = {0302-9743},
   Issn-Online = {1611-3349},
   Month = may,
   Note = {1st International Workshop (DALT 2003), Melbourne, Australia, 15~} # jul # {~2003. Revised Selected and Invited Papers},
   Pages = {1--17},
   Publisher = {Springer Berlin Heidelberg},
   ScopusId = {2-s2.0-23244434648},
   WosId = {000222257200001},
   Series = {Lecture Notes in Computer Science},
   Subseries = {Lecture Notes in Artificial Intelligence},
   Title = {{MAS} as Complex Systems: A View on the Role of Declarative Approaches},
   Url = {http://link.springer.com/10.1007/978-3-540-25932-9_1},
   Volume = 2990,
   Year = 2004
}

@article{aose-jaamas9,
   AcmId = {1015037},
   Author = {Zambonelli, Franco and Omicini, Andrea},
   Doi = {10.1023/B:AGNT.0000038028.66672.1e},
   Editor = {Luck, Michael},
   Issn = {1387-2532},
   Journal = {Autonomous Agents and Multi-Agent Systems},
   Month = nov,
   Note = {Special Issue: Challenges for Agent-Based Computing},
   Number = 3,
   Pages = {253--283},
   Publisher = {Springer Netherlands},
   ScopusId = {2-s2.0-4344626967},
   Title = {Challenges and Research Directions in Agent-Oriented Software Engineering},
   Url = {http://link.springer.com/10.1023/B:AGNT.0000038028.66672.1e},
   Volume = 9,
   WosId = {000223332800003},
   Year = 2004
}

@book{jason-book,
   place = {Chichester},
   title = {Programming multi-agent systems in AgentSpeak using Jason},
   publisher = {Wiley},
   author = {Bordini, Rafael H. and Hübner Jomi Fred. and Wooldridge, Michael J.},
   year = 2007
}

@book{ge-architecture,
   title =     {Game Engine Architecture},
   author =    {Jason Gregory},
   publisher = {CRC Press},
   isbn =      {9781351974271,1351974270,9781351974288,1351974289},
   year =      {2019},
   series =    {},
   edition =   {3.},
   volume =    {},
   url =       {http://gen.lib.rus.ec/book/index.php?md5=84557600bda2ec45e2e13777fb09bde6}
}

@misc{play-framework,
   title        = "Play: The High Velocity Web Framework For Java and Scala",
   author       = "Lightbend Inc.",
   howpublished = "\url{https://www.playframework.com/}",
   year         = "2018"
}

@book{akka-book,
  title={Learning Akka},
  author={Goodwin, Jason},
  year={2015},
  publisher={Packt Publishing Ltd}
}

@misc{unity,
   title        = "Unity",
   author       = "Unity Technologies",
   howpublished = "\url{https://unity.com/}",
   year         = "2019"
}

@misc{unity_collision,
   title        = "Colliders",
   author       = "Unity Technologies",
   howpublished = "\url{https://docs.unity3d.com/Manual/CollidersOverview.html}",
   year         = "2019"
}

@misc{unity_rigidbody,
   title        = "RigidBody",
   author       = "Unity Technologies",
   howpublished = "\url{https://docs.unity3d.com/ScriptReference/Rigidbody.html}",
   year         = "2019"
}

@misc{unity_transform,
   title        = "Transform",
   author       = "Unity Technologies",
   howpublished = "\url{https://docs.unity3d.com/ScriptReference/Transform.html}",
   year         = "2019"
}



@misc{akka,
   title        = "Akka: toolkit for building highly concurrent, distributed, and resilient message-driven applications for Java and Scala",
   author       = "Lightbend, Inc.",
   howpublished = "\url{https://akka.io/}",
   year         = "2019"
}

@misc{wrld,
   author = {{WRLD Team}},
   title = {{WRLD}},
   howpublished = "\url{https://www.wrld3d.com/}",
   year = "2015"
}

@misc{tyrus,
   author = {{Oracle Corporation}},
   title = {{Project Tyrus}},
   howpublished = "\url{https://tyrus-project.github.io/index.html}",
   year = "2017"
}

@misc{treccani,
   author = {{Vocabolario Treccani}},
   title = {{Treccani}},
   howpublished = "\url{http://www.treccani.it/vocabolario/}"
}

@misc{websocket_hystory,
   author = {{BNG}},
   title = {{WebSockets: A Guide}},
   howpublished = "\url{http://buildnewgames.com/websockets/}"
}

@misc{jacamo,
   author = {{Olivier Boissier and Rafael H. Bordini and Jomi F. Hübner and Alessandro Ricci and Andrea Santi}},
   title = {{JaCaMo Project}},
   howpublished = "\url{http://jacamo.sourceforge.net/}"
}

@misc{unity_prolog,
   author       = {Ian Horswill},
   title        = {{UnityProlog: A mostly ISO-compliant Prolog interpreter for Unity3D}},
   month        = aug,
   year         = 2015,
   publisher    = {ianhorswill},
   howpublished = "\url{https://github.com/ianhorswill/UnityProlog}"
}

@misc{websocket-sharp,
   author       = {STA},
   title        = {{websocket-sharp: A C\# implementation of the WebSocket protocol client and server}},
   month        = oct,
   year         = 2010,
   publisher    = {sta},
   howpublished = "\url{http://sta.github.io/websocket-sharp/}"
}

@misc{json,
   author       = {ECMA International},
   title        = {{Standart ECMA-404: The JSON Data Interchange Syntax}},
   month        = dec,
   year         = 2017,
   publisher    = {ECMA International},
   howpublished = "\url{http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf}"
}

@misc{gson,
   author       = {Google LLC},
   title        = {{Gson: A Java serialization/deserialization library to convert Java Objects into JSON and back}},
   month        = aug,
   year         = 2008,
   publisher    = {google},
   howpublished = "\url{https://github.com/google/gson/graphs/contributors}"
}

@misc{json_net,
   author       = {Newtonsoft},
   title        = {{Json.NET: Popular high-performance JSON framework for .NET}},
   month        = sep,
   year         = 2007,
   publisher    = {jamesNK},
   howpublished = "\url{https://www.newtonsoft.com/json}"
}


@inproceedings{5763564,
   author={J. {Blair} and F. {Lin}},
   booktitle={2011 IEEE Workshops of International Conference on Advanced Information Networking and Applications},
   title={An Approach for Integrating 3D Virtual Worlds with Multiagent Systems},
   year={2011},
   volume={},
   number={},
   abstract={Education is incorporating more and more of the capabilities provided by the Internet. One such move is the incorporation of 3D virtual worlds in the learning environment. Another is the increasing development of multiagent systems that support the learner or the tutor. Integrating pedagogically based multiagent systems with 3D virtual worlds could provide a more engaging immersive learning environment. This paper explores the feasibility of integrating a 3D virtual world with a pedagogical multiagent system named QuizMASter, an educational game for elearning that helps students learn their course material through friendly competition. The integration was developed by devising, implementing and testing an approach using open source technologies, namely, Open Wonderland and JADE. The result is encouraging as the integration is technically feasible, not overly difficult and opens a door to further integration opportunities.},
   keywords={computer aided instruction;computer games;multi-agent systems;integrating 3D virtual worlds;multiagent systems;Internet;QuizMASter;educational game;elearning;open wonderland;open source technologies;JADE;Three dimensional displays;Multiagent systems;Games;Computer architecture;Java;Artificial intelligence;Collaboration;Education;Multi User Virtual Environment;3D Virtual Worlds;Multiagent Systems},
   doi={10.1109/WAINA.2011.15},
   ISSN={},
   month={March},
}

@article{gamebots,
   title={Gamebots: a flexible test bed for multiagent team research},
   author={Kaminka, Gal A and Veloso, Manuela M and Schaffer, Steve and Sollitto, Chris and Adobbati, Rogelio and Marshall, Andrew N and Scholer, Andrew and Tejada, Sheila},
   journal={Communications of the ACM},
   volume={45},
   number={1},
   year={2002},
   publisher={Citeseer}
}

@article{utsaf,
   author = {Phongsak Prasithsangaree and Joseph Manojlovich and Stephen Hughes and Mike Lewis},
   title ={UTSAF: A Multi-Agent-Based Software Bridge for Interoperability between                 Distributed Military and Commercial Gaming Simulation},
   journal = {SIMULATION},
   volume = {80},
   number = {12},
   year = {2004},
   doi = {10.1177/0037549704050907},
   URL = {https://doi.org/10.1177/0037549704050907},
   eprint = {https://doi.org/10.1177/0037549704050907},
   abstract = { Rapid advances in consumer electronics have led to the anomaly that consumer off-the-shelf gaming hardware and software provide better interactive graphics than military and other specialized systems costing orders of magnitude more. UTSAF (Unreal Tournament Semi-Automated Force) is bridging software written to take advantage of the power of gaming systems by allowing them to participate in distributed simulations with military simulators. UTSAF illustrates the use of multiagent technology to flexibly interconnect otherwise incompatible systems. This article describes an architectural approach for rapidly constructing middleware by taking advantage of built-in capabilities for processing, communication, and interoperation that a multiagent infrastructure provides. Several software agents based on Reusable Environment for Task-Structured Intelligent Networked Agents (RETSINAs) are used to support interoperability between military simulation nodes based on distributed interactive simulation and Unreal game simulators. Using a multiagent system, UTSAF can be expanded to support several network environments and interact with other agent-based software. }
}

@article{BOISSIER2013747,
   title = "Multi-agent oriented programming with JaCaMo",
   journal = "Science of Computer Programming",
   volume = "78",
   number = "6",
   year = "2013",
   note = "Special section: The Programming Languages track at the 26th ACM Symposium on Applied Computing (SAC 2011) \& Special section on Agent-oriented Design Methods and Programming Techniques for Distributed Computing in Dynamic and Complex Environments",
   issn = "0167-6423",
   doi = "https://doi.org/10.1016/j.scico.2011.10.004",
   url = "http://www.sciencedirect.com/science/article/pii/S016764231100181X",
   author = "Olivier Boissier and Rafael H. Bordini and Jomi F. Hübner and Alessandro Ricci and Andrea Santi",
   keywords = "Multi-agent oriented programming, Autonomous agents, Shared environments, Agent organisations",
   abstract = "This paper brings together agent oriented programming, organisation oriented programming and environment oriented programming, all of which are programming paradigms that emerged out of research in the area of multi-agent systems. In putting together a programming model and concrete platform called JaCaMo which integrates important results and technologies in all those research directions, we show in this paper, with the combined paradigm, that we prefer to call “multi-agent oriented programming”, the full potential of multi-agent systems as a programming paradigm. JaCaMo builds upon three existing platforms: Jason for programming autonomous agents, Moise for programming agent organisations, and CArtAgO for programming shared environments. This paper also includes a simple example that illustrates the approach and discusses some real-world applications that have been or are being developed with JaCaMo."
}

@InProceedings{cartago,
   author="Ricci, Alessandro and Viroli, Mirko and Omicini, Andrea",
   editor="Weyns, Danny and Parunak, H. Van Dyke and Michel, Fabien",
   title="CArtAgO: A Framework for Prototyping Artifact-Based Environments in MAS",
   booktitle="Environments for Multi-Agent Systems III",
   year="2007",
   publisher="Springer Berlin Heidelberg",
   address="Berlin, Heidelberg",
   abstract="This paper describes CArtAgO, a framework for developing artifact-based working environments for multiagent systems (MAS). The framework is based on the notion of artifact, as a basic abstraction to model and engineer objects, resources and tools designed to be used and manipulated by agents at run-time to support their working activities, in particular the cooperative ones. CArtAgO enables MAS engineers to design and develop suitable artifacts, and to extend existing agent platforms with the possibility to create artifact-based working environments, programming agents to exploit them. In this paper, first the abstract model and architecture of CArtAgO is described, then a first Java-based prototype technology is discussed.",
   isbn="978-3-540-71103-2"
}

@book{play_framework_book,
   author="Hunt, John",
   title="A Beginner's Guide to Scala, Object Orientation and Functional Programming",
   bookTitle="A Beginner's Guide to Scala, Object Orientation and Functional Programming",
   year="2018",
   publisher="Springer International Publishing",
   address="Cham",
   abstract="The Play framework is a lightweight, stateless, asynchronous framework for building Web applications and services.",
   isbn="978-3-319-75771-1",
   doi="10.1007/978-3-319-75771-1_38",
   url="https://doi.org/10.1007/978-3-319-75771-1_38"
}

@article{article,
   author = {Wang, Ziran and Wu, Guoyuan and Boriboonsomsin, Kanok and Barth, Matthew and Han, Kyungtae and Kim, BaekGyu and Tiwari, Prashant},
   year = {2019},
   month = {05},
   title = {Cooperative Ramp Merging System: Agent-Based Modeling and Simulation Using Game Engine},
   volume = {2},
   doi = {10.4271/12-02-02-0008}
}

@Article{Omicini2008,
   author="Omicini, Andrea and Ricci, Alessandro and Viroli, Mirko",
   title="Artifacts in the A{\&}A meta-model for multi-agent systems",
   journal="Autonomous Agents and Multi-Agent Systems",
   year="2008",
   month="Dec",
   day="01",
   volume="17",
   number="3",
   abstract="In this article we focus on the notion of artifact for agents in multi-agent systems (MAS) as a basis for a new meta-model promoting the modelling and engineering of agent societies and MAS environment as first-class entities. Its conceptual foundations lay upon theories and results coming from computational sciences as well as from organisational and cognitive sciences, psychology, computer supported cooperative work (CSCW), anthropology and ethology. In the resulting agents {\&} artifacts (A{\&}A) meta-model, agents are the (pro-)active entities in charge of the goals/tasks that altogether build up the whole MAS behaviour, whereas artifacts are the reactive entities providing the services and functions that make individual agents work together in a MAS, and that shape agent environment according to the MAS needs. After presenting the scientific background, we define the notions of artifact in the A{\&}A meta-model, discuss how it affects the notion of intelligence in MAS, and show its application to a number of agent-related research fields.",
   issn="1573-7454",
   doi="10.1007/s10458-008-9053-x",
   url="https://doi.org/10.1007/s10458-008-9053-x"
}

@techreport{RFC6455,
   author = {I. Fette and A. Melnikov},
   title = {The WebSocket Protocol},
   howpublished = {Internet Requests for Comments},
   type = {RFC},
   number = {6455},
   year = {2011},
   month = {December},
   issn = {2070-1721},
   publisher = {RFC Editor},
   institution = {RFC Editor},
   url = {http://www.rfc-editor.org/rfc/rfc6455.txt},
   note = {\url{http://www.rfc-editor.org/rfc/rfc6455.txt}},
}

@techreport{RFC6202,
   author = {S. Loreto and P. Saint-Andre and S. Salsano and G. Wilkins},
   title = {Known Issues and Best Practices for the Use of Long Polling and Streaming in Bidirectional HTTP},
   howpublished = {Internet Requests for Comments},
   type = {RFC},
   number = {6202},
   year = {2011},
   month = {April},
   issn = {2070-1721},
   publisher = {RFC Editor},
   institution = {RFC Editor},
   url = {http://www.rfc-editor.org/rfc/rfc6202.txt},
   note = {\url{http://www.rfc-editor.org/rfc/rfc6202.txt}},
}
